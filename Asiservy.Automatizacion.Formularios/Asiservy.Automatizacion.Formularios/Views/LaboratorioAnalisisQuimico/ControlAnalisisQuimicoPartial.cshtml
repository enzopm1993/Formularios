@model IEnumerable<Asiservy.Automatizacion.Formularios.Models.Produccion.ItemParadaCocina>
@*@using Asiservy.Automatizacion.Formularios.AccesoDatos.CALIDAD.Datos;*@
@using Asiservy.Automatizacion.Datos.Datos;
@using Newtonsoft.Json;

<table class="table table-bordered table-hover table-striped text-uppercase" id="tblDataTables">
    <thead style="font-size:10px">
        <tr>
            <th>COCINADOR</th>
            <th>PARADA</th>
            <th>LOTE/COD. BARCO</th>
            <th>ESP. TALLA</th>
            <th>Nº COCHE</th>
            @if (ViewBag.listaParametros != null)
            {
                foreach (var thead in ViewBag.listaParametros)
                {

                    <th>@thead.NombreParametro</th>
                    if (thead.NombreParametro.ToUpper() == "HISTAMINA")
                    {
                        <th>VALOR MAX</th>
                        <th>VALOR MIN</th>
                    }
                    else
                    {
                        <th>PROM</th>}
                }
            }
            <th>ÁNALISTA</th>
            <th>TURNO</th>
            @*<th>OBSERVACIÓN</th>*@
        </tr>
    </thead>
    @{
        var listaAgrupada = (from all in Model
                             group all by new { all.COCINA, all.PARADA } into listGroup
                             orderby listGroup.Key.PARADA
                             select new { listGroup.Key.COCINA, listGroup.Key.PARADA });
        var consultarDetalleDia = ViewBag.ConsultarDetalleDia as List<sp_Analisis_Quimico_Precoccion>;
        string[] turnoLetra = new string[] { "", "A", "B", "C", "D", "E", "F", "G" };
    }
    <tbody style="font-size:9px">
        @foreach (var row in listaAgrupada)
        {
            var turno = (from c in consultarDetalleDia where int.Parse(c.Cocinador) == row.COCINA && c.Parada == row.PARADA select c).FirstOrDefault();
            var listaCocinaParada = (from c in Model where c.COCINA == row.COCINA && c.PARADA == row.PARADA select c).OrderBy(x => x.PARADA).ToList();
            string json = JsonConvert.SerializeObject(listaCocinaParada);
            string turnoValidado = "";
            if (turno!=null)
            {
                turnoValidado = turno.Turno;
            }
            if (turno == null || turno.Turno == ViewBag.Turno)
            {
            <tr style="cursor:pointer" onclick="ModalIngresoSubDetalle(@json, @row.COCINA, @row.PARADA,@turnoValidado)">
                <td>@row.COCINA</td>
                <td>@row.PARADA</td>
                <td>
                    @foreach (var item in listaCocinaParada)
                    {
                        <div>@item.LOTE / @item.BARCO</div>
                    }
                </td>
                <td>
                    @foreach (var item in listaCocinaParada)
                    {
                        <div>@item.ESPECIE - @item.TALLA</div>
                    }
                </td>
                <td>
                    @foreach (var item in listaCocinaParada)
                    {
                        <div>@item.COCHES</div>
                    }
                </td>
                @if (ViewBag.listaParametros != null)
                {
                    foreach (var thead in ViewBag.listaParametros)
                    {
                        <td style="background-color: rgba(165, 158, 158, 0.72);font-size:10px">
                            @foreach (var lote in listaCocinaParada)
                            {
                                var groupLote = (from item in consultarDetalleDia
                                                 where item.LoteBarco == lote.LOTE + "-" + lote.BARCO && item.Cocinador == lote.COCINA.ToString() && item.Parada == lote.PARADA && item.IdParametro == thead.IdParametro
                                                 orderby item.Parada
                                                 group item by new { item.IdElemento, item.IdParametro, item.LoteBarco, item.Valor } into x
                                                 select new { x.Key.IdElemento, x.Key.IdParametro, x.Key.LoteBarco, x.Key.Valor }).ToList();
                                foreach (var glote in groupLote)
                                {
                                    if (thead.IdParametro == glote.IdParametro && lote.LOTE + "-" + lote.BARCO == glote.LoteBarco)
                                    {
                                        <div id="inputParametro_@thead.IdParametro@row.COCINA@row.PARADA@lote.LOTE">@lote.LOTE - @glote.Valor</div>
                                    }
                                }
                                if (!groupLote.Any())
                                {
                                    <div>----</div>
                                }
                            }
                        </td>
                        if (thead.NombreParametro.ToUpper() == "HISTAMINA")
                        {
                            var listaValor = (from x in consultarDetalleDia
                                              where x.Cocinador == row.COCINA.ToString() && x.Parada == row.PARADA && x.IdParametro == thead.IdParametro
                                              select new { x.Valor }).ToList();


                            <td>@listaValor.OrderByDescending(x => x.Valor).Select(x => x.Valor).FirstOrDefault()</td>
                            <td>@listaValor.OrderBy(x => x.Valor).Select(x => x.Valor).FirstOrDefault()</td>
                        }
                        else
                        {
                            <td>
                                @{
                                    var sum = (from x in consultarDetalleDia
                                               where x.Cocinador == row.COCINA.ToString() && x.Parada == row.PARADA && x.IdParametro == thead.IdParametro
                                               select x.Valor).ToList();
                                    decimal average = 0;
                                    if (sum.Any())
                                    {
                                        average = sum.Where(a => a.Value != 0)
                                      .Select(a => Convert.ToDecimal(a.Value))
                                      .DefaultIfEmpty(0)
                                      .Average();
                                    }
                                }

                                @average.ToString("0.00")
                            </td>
                                            }
                                        }
                                    }
                <td>
                    @if (turno != null)
                    {
                        @turno.UsuarioIngresoLog
                    }
                </td>
                <td class="text-center">
                    @if (turno != null)
                    {
                        @turnoLetra[int.Parse(turno.Turno)];
                    }

                </td>
            </tr>
                                        }
                                    }
    </tbody>
</table>

<script src="~/Scripts/General/dataTableJS.js"></script>