@model Asiservy.Automatizacion.Formularios.Models.Asistencia.ControlDeAsistenciaPrestadosViewModel

@Html.Partial("ModalObservacion")
@Html.Partial("ModalHora")
@Html.Hidden("EstadoControlCuchillo", "1")

<input type=image src="~/Content/images/Time.png" onclick="SetearHora()" id="btnhora">
<br />
<input type="text" id="busqueda" onkeyup="buscarenTabla()" placeholder="Buscar por Nombres..">
<table class="table " id="TableCuchillos">
    <thead>
        <tr class="text-center">
            <th class="align-bottom" rowspan="2" hidden></th>
            <th class="align-bottom" rowspan="2"></th>
            <th class="align-bottom" rowspan="2"><b> Personal</b></th>
            <th class="align-bottom" rowspan="2"><b>Check</b> </th>
            <th class="align-bottom" rowspan="2"><b>Hora</b> </th>

            <th class="align-bottom" rowspan="2"><b>Observación</b> </th>

            <th class="align-bottom" rowspan="2"><b>Estado</b> </th>
            <th class="align-bottom" rowspan="2"></th>
            <th class="align-middle" colspan="3"><b>Cuchillos</b> </th>
        </tr>
        <tr>
            <th>
                <div class="text-center">

                    <img class="imageCuchillo img-fluid" src="~/Content/images/cuchillo03.png" />
                </div>
            </th>
            <th>
                <div class="text-center">
                    <img class="imageCuchillo img-fluid" src="~/Content/images/cuchillo01.png" />
                </div>
            </th>
            <th>
                <div class="text-center">

                    <img class="imageCuchillo img-fluid" src="~/Content/images/cuchillo02.png" />
                </div>
            </th>
        </tr>
    </thead>
    <tbody>
        @{
            int cont = 0;
        }
        @foreach (var item in Model.ControlAsistencia)
        {
            cont++;
            string color = "";
            if (item.Bloquear == 1) { color = "#E3D6D3"; } else { color = "FFFFFF"; }

            if (item.Bloquear == 1)
            {
                <script>DeshabilitarControles('@cont')</script>
            }
            <tr bgcolor="@color" id="@cont">
                <td hidden>
                    @Html.TextBoxFor(x => x.ControlAsistencia[cont - 1].Cedula)
                </td>

                <td>
                    @cont
                </td>
                <td>

                    @item.NOMBRES

                </td>
                <td class="text-center">
                    @*<label class="btn btn-light text-xs-center" id="LabelAsistencia-@cont">*@

                    @if (item.EstadoAsistencia == "1" || item.EstadoAsistencia == "2")
                    {
                        <script> PintarCHeck('@cont');</script>}

                    @*<input type="checkbox" autocomplete="on" onchange="GuardarPersona(@cont,'@item.NOMBRES','check');" id="CheckAsistencia-@cont">
                        </label>*@
                    <div class="custom-control custom-switch">
                        <input type="checkbox" class="custom-control-input" id="CheckAsistencia-@cont" onchange="GuardarPersona(@cont,'@item.NOMBRES','check','@item.CentroCostos','@item.Recurso','@item.Linea','@item.Cargo');">
                        <label class="custom-control-label" for="CheckAsistencia-@cont" id="LabelFecha"></label>
                    </div>
                </td>
                <td>

                    @Html.TextBoxFor(x => x.ControlAsistencia[cont - 1].Hora, new { type = "time", @class = "form-control", @onkeyup = "GuardarPersona(" + @cont + ",'" + @item.NOMBRES + "','change');", @onchange = "GuardarPersona(" + @cont + ",'" + @item.NOMBRES + "','change');" })
                </td>

                <td class="text-center">
                    <div>

                        @*@Html.TextAreaFor(x => x.ControlAsistencia[cont - 1].Observacion, new { @row = "2", @onkeyup = "GuardarPersona(" + @cont + ",'" + @item.NOMBRES + "','change');" })*@
                        @Html.HiddenFor(x => x.ControlAsistencia[cont - 1].Observacion)
                        @{
                            var colorfa = "#01224B";
                            if (!string.IsNullOrEmpty(Model.ControlAsistencia[cont - 1].Observacion))
                            {
                                colorfa = "red";
                            }
                        }
                        <i class="fas fa-eye" style="cursor:pointer; color:@colorfa" onclick="CargarObservacion('@(cont-1)','@item.Bloquear')" data-toggle="modal" data-target="#ModalObservacion"></i>
                    </div>
                </td>

                <td>

                    @Html.DropDownListFor(x => x.ControlAsistencia[cont - 1].EstadoAsistencia, new SelectList(ViewBag.EstadoAsistencia, "Codigo", "Descripcion", Model.ControlAsistencia[cont - 1].EstadoAsistencia), "Seleccione", new { @class = "browser-default custom-select", @witdh = "200px", @onchange = "GuardarPersona(" + @cont + ",'" + @item.NOMBRES + "','combo','"+@item.CentroCostos+"','"+@item.Recurso+"','"+@item.Linea+"','"+item.Cargo+"')" })
                </td>
                <td>
                    <center>
                        @if (item.Observacion == "No ha marcado en el biométrico")
                        {
                            <img src="~/Content/images/actualizar.png" width="30" id="actualizar-@cont" height="30" style="cursor: pointer" onclick="ConsultarBiometrico('@cont','@item.Cedula')" />
                        }
                    </center>
                </td>

                <td class="text-center align-content-center">
                    @{ var cuchillo = (from c in Model.ControlDeCuchillos
                                        where c.Cedula == item.Cedula
                                        select c).FirstOrDefault();}

                    @if (cuchillo != null)
                    {
                        <div class="col-xs-2 text-xs-center">
                            @if (cuchillo.CuchilloBlanco != 0)
                            {
                                Model.CuchillosBlancosSobrantes.Add(new Asiservy.Automatizacion.Formularios.Models.Asistencia.ControlDeAsistenciaPrestadosViewModel.Cuchillos { Id = cuchillo.CuchilloBlanco, Numero = cuchillo.CuchilloBlanco });
                                @Html.DropDownList("Blanco" + item.Cedula, new SelectList(Model.CuchillosBlancosSobrantes, "Id", "Numero", cuchillo.CuchilloBlanco), "Seleccione", new { @class = "browser-default custom-select", @onchange = "check(this.value,'B','" + item.Cedula + "')" });

                            }
                            else
                            {
                                @Html.DropDownList("Blanco" + item.Cedula, new SelectList(Model.CuchillosBlancosSobrantes, "Id", "Numero"), "Seleccione", new { @class = "browser-default custom-select", @onchange = "check(this.value,'B','" + item.Cedula + "')" });

                            }


                        </div>
                    }
                    else
                    {
                        <div class="col-xs-2 text-xs-center">
                            @Html.DropDownList("Blanco" + item.Cedula, new SelectList(Model.CuchillosBlancosSobrantes, "Id", "Numero"), "Seleccione", new { @class = "browser-default custom-select", @onchange = "check(this.value,'B','" + item.Cedula + "')" })

                        </div>
                    }




                </td>
                <td class="text-center">

                    @if (cuchillo != null)
                    {
                        <div class="col-xs-2 text-xs-center">
                            @if (cuchillo.CuchilloRojo != 0)
                            {
                                Model.CuchillosRojosSobrantes.Add(new Asiservy.Automatizacion.Formularios.Models.Asistencia.ControlDeAsistenciaPrestadosViewModel.Cuchillos { Id = cuchillo.CuchilloRojo, Numero = cuchillo.CuchilloRojo });

                                @Html.DropDownList("Rojo" + item.Cedula, new SelectList(Model.CuchillosRojosSobrantes, "Id", "Numero", cuchillo.CuchilloRojo), "Seleccione", new { @class = "browser-default custom-select", @onchange = "check(this.value,'R','" + item.Cedula + "')" })

                            }
                            else
                            {
                                @Html.DropDownList("Rojo" + item.Cedula, new SelectList(Model.CuchillosRojosSobrantes, "Id", "Numero"), "Seleccione", new { @class = "browser-default custom-select", @onchange = "check(this.value,'R','" + item.Cedula + "')" })

                            }
                        </div>
                    }
                    else
                    {
                        <div class="col-xs-2 text-xs-center">
                            @Html.DropDownList("Rojo" + item.Cedula, new SelectList(Model.CuchillosRojosSobrantes, "Id", "Numero"), "Seleccione", new { @class = "browser-default custom-select", @onchange = "check(this.value,'R','" + item.Cedula + "')" })

                        </div>
                    }


                </td>
                <td class="text-center">

                    <div class="col-xs-2 text-xs-center">

                        @Html.DropDownList("Negro" + item.Cedula, new SelectList(Model.CuchillosNegrosSobrantes, "Id", "Numero"), "Seleccione", new { @class = "browser-default custom-select", @onchange = "check(this.value,'N','" + item.Cedula + "')" })


                    </div>

                    <div class="col-xs-2 text-xs-center">

                    </div>

                </td>
            </tr>
        }
    </tbody>

</table>




